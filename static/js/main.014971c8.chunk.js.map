{"version":3,"sources":["ClassTodo/ClassTaskRow.js","ClassTodo/ClassAddTaskForm.js","ClassTodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["ClassTaskRow","doneClickHandler","props","doneTask","task","deleteClickHandler","deleteTask","this","name","status","className","id","onClick","React","Component","ClassAddTaskForm","state","inputChangeHandler","e","setState","target","value","addNewTask","newTask","addTask","type","onChange","ClassTodoApp","tasks","changeDisplay","category","filter","length","taskCopy","push","i","index","findIndex","pendingTask","pendingTaskList","map","doneTaskList","border","colSpan","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.014971c8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ClassTaskRow extends React.Component {\r\n\r\n    doneClickHandler = () => {\r\n        this.props.doneTask(this.props.task);\r\n    }\r\n    deleteClickHandler = () => {\r\n        this.props.deleteTask(this.props.task);\r\n    }\r\n\r\n    render(){\r\n        let {name, status} = this.props.task;\r\n        return(\r\n            <tr>\r\n                <td className=\"custom-td\">{name}</td>\r\n                <td className=\"custom-td\" id=\"actions\">\r\n                    {status === 'pending' ? <i className=\"icon fas fa-check-circle\" id=\"check_done\" onClick={this.doneClickHandler}></i> : null}\r\n                    <i className=\"icon fas fa-trash-alt\" id=\"delete_task\" onClick={this.deleteClickHandler}></i>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ClassTaskRow;","import React from 'react';\r\n\r\nclass ClassAddTaskForm extends React.Component{\r\n    state = {\r\n        name: '',\r\n        status: 'pending'\r\n    }\r\n\r\n    inputChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    addNewTask = (e) => {\r\n        let newTask = {\r\n            name: this.state.name,\r\n            status: 'pending'\r\n        }\r\n\r\n        this.props.addTask(newTask);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <tr>\r\n                <td className=\"custom-td\">\r\n                    <span className=\"card-title blue-text\">Task Name: </span>\r\n                    <input className=\"input-field\" type=\"text\" name=\"name\" id=\"name\" value={this.state.name} onChange={this.inputChangeHandler} />\r\n                    <input type=\"hidden\" name=\"status\" value={this.state.status} /> <br />\r\n                    <button className=\"btn blue btn-block\" onClick={this.addNewTask}>Add Task</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassAddTaskForm;","import React from 'react';\r\nimport ClassTaskRow from './ClassTodo/ClassTaskRow.js';\r\nimport ClassAddTaskForm from './ClassTodo/ClassAddTaskForm.js';\r\n\r\n\r\nclass ClassTodoApp extends React.Component{\r\n\r\n    state = {\r\n        tasks: [\r\n        ],\r\n    }\r\n    \r\n    changeDisplay = (category) => {\r\n        this.setState({\r\n            filter: category\r\n        });\r\n    }\r\n\r\n    addTask = (newTask) => {\r\n        newTask.id = this.state.tasks.length + 1;\r\n        let taskCopy = [...this.state.tasks];\r\n        taskCopy.push(newTask);\r\n        // console.log(taskCopy);\r\n        this.setState({\r\n            tasks : taskCopy,\r\n        });\r\n    }\r\n\r\n    deleteTask = (task) => {\r\n        let taskCopy = [...this.state.tasks];\r\n        taskCopy = taskCopy.filter(i => i.id !== task.id);\r\n        this.setState({\r\n            tasks: taskCopy,\r\n        });\r\n    }\r\n\r\n    doneTask = (task) => {\r\n        let taskCopy = [...this.state.tasks];\r\n        let index = taskCopy.findIndex(i => i.id === task.id);\r\n        taskCopy[index].status = 'done';\r\n        this.setState({\r\n            tasks: taskCopy,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let pendingTask = this.state.tasks.filter(task => task.status === 'pending')\r\n        let pendingTaskList = pendingTask.map(task =>\r\n            <ClassTaskRow key={task.id} task={task} deleteTask={this.deleteTask} doneTask={this.doneTask} />\r\n        )\r\n        let doneTask = this.state.tasks.filter(task => task.status === 'done')\r\n        let doneTaskList = doneTask.map(task =>\r\n            <ClassTaskRow key={task.id} task={task} deleteTask={this.deleteTask} />\r\n        )\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <table border=\"1\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan=\"2\">Add Task</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <ClassAddTaskForm addTask={this.addTask} />\r\n                            </tbody>\r\n                        </table>\r\n                </div> <br />\r\n                <div id=\"display\">\r\n                    {pendingTask == '' ? <p>No Pending Task</p> :\r\n                        <table border=\"1\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan=\"2\">Pending Tasks</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {pendingTaskList}\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n\r\n                    {doneTask == '' ? <p>No Done Task</p> :\r\n                        <table border=\"1\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan=\"2\">Done Tasks</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {doneTaskList}\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ClassTodoApp;","// import logo from './logo.svg';\nimport './App.css';\nimport ClassTodoApp from './ClassTodoApp';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <ClassTodoApp />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}